# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.5.1-node-browsers
         environment:
         - RAILS_ENV: test
         - PGHOST: 127.0.0.1
         - PGUSER: ubuntu

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
       - image: circleci/postgres:10.2
         environment:
         - POSTGRES_USER: ubuntu
         - POSTGRES_DB: circle_test
         - POSTGRES_PASSWORD: ""

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Run Rubocop
      - run:
          name: Rubocop
          command: bundle exec rubocop app/models app/controllers app/helpers app/mailers

      # Database setup
      - run: |
          cp config/database.yml.ci config/database.yml
          bundle exec rails db:create db:schema:load --trace


      # run tests!
      - run:
          name: RSpec
          command: bundle exec rspec
# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.4.3-node-browsers
         environment:
         - RAILS_ENV: test
         - PGHOST: 127.0.0.1
         - PGUSER: ubuntu

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
       - image: circleci/postgres:10.2
         environment:
         - POSTGRES_USER: ubuntu
         - POSTGRES_DB: circle_test
         - POSTGRES_PASSWORD: ""

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Run Rubocop
      - run:
          name: Rubocop
          command: bundle exec rubocop app/models app/controllers app/helpers app/mailers

      # Database setup
      - run: |
          cp config/database.yml.ci config/database.yml
          bundle exec rails db:create db:schema:load --trace


      # run tests!
      - run:
          name: RSpec
          command: bundle exec rspec
# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.4.3-node-browsers
         environment:
         - RAILS_ENV: test
         - PGHOST: 127.0.0.1
         - PGUSER: ubuntu

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
       - image: circleci/postgres:10.2
         environment:
         - POSTGRES_USER: ubuntu
         - POSTGRES_DB: circle_test
         - POSTGRES_PASSWORD: ""

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Run Rubocop
      - run:
          name: Rubocop
          command: bundle exec rubocop app/models app/controllers app/helpers app/mailers

      # Database setup
      - run: |
          cp config/database.yml.ci config/database.yml
          bundle exec rails db:create db:schema:load --trace

      # run tests!
      - run:
          name: RSpec
          command: bundle exec rspec

      # Report to Code Climate
      - run:
          name: Code Climate test-reporter
          command: bundle exec codeclimate-test-reporter
